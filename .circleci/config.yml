version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.16
  codecov: codecov/codecov@1.1.1

executors:
  default:
    docker:
      - image: cimg/go:1.17.1

commands:
  install-node-npm:
    description: Install Node.js and npm
    steps:
      - run:
          name: "Install Node.js and npm"
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
            echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
            nvm install 16.9.1
      - run:
          name: Check current version of node
          command: node -v
      - run:
          name: Check current version of NPM
          command: npm -v
  npm-dependencies:
    description: "Get JavaScript dependencies"
    steps:
      - restore_cache:
          name: Restore npm cache
          key: v2-npm-{{ checksum "./webapp/package-lock.json" }}-{{ arch }}
      - run:
          name: Getting JavaScript dependencies
          command: |
            cd webapp
            NODE_ENV=development npm install --ignore-scripts --no-save
      - save_cache:
          name: Save npm cache
          key: v2-npm-{{ checksum "./webapp/package-lock.json" }}-{{ arch }}
          paths:
            - ./webapp/node_modules
  install-golangci-lint:
    description: Install golangci-lint
    parameters:
      version:
        type: string
        default: 1.42.1
      gobin:
        type: string
        default: /home/circleci/go/bin
      prefix:
        type: string
        default: v1
        description: Prefix for cache key to store the binary.
    steps:
      - restore_cache:
          name: Restore golangci-lint cache
          keys: ['<< parameters.prefix >>-golangci-lint-{{ arch }}-<< parameters.version >>']
      - run:
          name: Install golangci-lint
          command: |
            mkdir -p << parameters.gobin >>
            command -v << parameters.gobin >>/golangci-lint && exit
            download=https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh
            wget -O- -q $download | sh -s -- -b << parameters.gobin >>/ v<< parameters.version >>
      - save_cache:
          name: Save golangci-lint cache
          key: '<< parameters.prefix >>-golangci-lint-{{ arch }}-<< parameters.version >>'
          paths: [<< parameters.gobin >>/golangci-lint]

aliases:
- &restore_cache
  restore_cache:
    key: go-mod-v1-{{ checksum "go.sum" }}
- &save_cache
  save_cache:
    key: go-mod-v1-{{ checksum "go.sum" }}
    paths:
    - "/home/circleci/go/pkg/mod"

jobs:
  lint:
    executor:
      name: default
    steps:
      - checkout
      - install-golangci-lint
      - *restore_cache
      - install-node-npm
      - npm-dependencies
      - run:
          name: Checking code style
          command: make check-style
      - run: go mod tidy -v
      - run:
          name: Checking diff of go mod files
          command: |
            git --no-pager diff --exit-code go.mod go.sum || (echo "Please run \"go mod tidy\" and commit the changes in go.mod and go.sum." && exit 1)
      - run: make apply
      - run:
          name: Checking diff of generated manifest files
          command: |
            git --no-pager diff --exit-code *manifest.* || (echo "Please run \"make apply\" and commit the changes in the generated manifests." && exit 1)
      - run: make i18n-extract
      - run:
          name: Checking diff of i18n files
          command: |
            git --no-pager diff --exit-code webapp/i18n/en.json || (echo "Please run \"make i18n-extract\" and commit the changes in en.json." && exit 1)
      - *save_cache

  test:
    executor:
      name: default
    steps:
      - checkout
      - *restore_cache
      - install-node-npm
      - npm-dependencies
      - run: make test
      - *save_cache

  build:
    executor:
      name: default
    steps:
      - checkout
      - install-node-npm
      - npm-dependencies
      - run:
          name: Building Plugin Bundle
          command: make dist

workflows:
  version: 2
  ci:
    jobs:
      - lint
      - test
      - build

