// Code generated by mockery v2.40.3. DO NOT EDIT.

package interfaces

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	rtc "github.com/mattermost/rtcd/service/rtc"

	sql "database/sql"
)

// MockMetrics is an autogenerated mock type for the Metrics type
type MockMetrics struct {
	mock.Mock
}

type MockMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMetrics) EXPECT() *MockMetrics_Expecter {
	return &MockMetrics_Expecter{mock: &_m.Mock}
}

// DecWebSocketConn provides a mock function with given fields:
func (_m *MockMetrics) DecWebSocketConn() {
	_m.Called()
}

// MockMetrics_DecWebSocketConn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DecWebSocketConn'
type MockMetrics_DecWebSocketConn_Call struct {
	*mock.Call
}

// DecWebSocketConn is a helper method to define mock.On call
func (_e *MockMetrics_Expecter) DecWebSocketConn() *MockMetrics_DecWebSocketConn_Call {
	return &MockMetrics_DecWebSocketConn_Call{Call: _e.mock.On("DecWebSocketConn")}
}

func (_c *MockMetrics_DecWebSocketConn_Call) Run(run func()) *MockMetrics_DecWebSocketConn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMetrics_DecWebSocketConn_Call) Return() *MockMetrics_DecWebSocketConn_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_DecWebSocketConn_Call) RunAndReturn(run func()) *MockMetrics_DecWebSocketConn_Call {
	_c.Call.Return(run)
	return _c
}

// Handler provides a mock function with given fields:
func (_m *MockMetrics) Handler() http.Handler {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Handler")
	}

	var r0 http.Handler
	if rf, ok := ret.Get(0).(func() http.Handler); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.Handler)
		}
	}

	return r0
}

// MockMetrics_Handler_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Handler'
type MockMetrics_Handler_Call struct {
	*mock.Call
}

// Handler is a helper method to define mock.On call
func (_e *MockMetrics_Expecter) Handler() *MockMetrics_Handler_Call {
	return &MockMetrics_Handler_Call{Call: _e.mock.On("Handler")}
}

func (_c *MockMetrics_Handler_Call) Run(run func()) *MockMetrics_Handler_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMetrics_Handler_Call) Return(_a0 http.Handler) *MockMetrics_Handler_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMetrics_Handler_Call) RunAndReturn(run func() http.Handler) *MockMetrics_Handler_Call {
	_c.Call.Return(run)
	return _c
}

// IncClusterEvent provides a mock function with given fields: evType
func (_m *MockMetrics) IncClusterEvent(evType string) {
	_m.Called(evType)
}

// MockMetrics_IncClusterEvent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncClusterEvent'
type MockMetrics_IncClusterEvent_Call struct {
	*mock.Call
}

// IncClusterEvent is a helper method to define mock.On call
//   - evType string
func (_e *MockMetrics_Expecter) IncClusterEvent(evType interface{}) *MockMetrics_IncClusterEvent_Call {
	return &MockMetrics_IncClusterEvent_Call{Call: _e.mock.On("IncClusterEvent", evType)}
}

func (_c *MockMetrics_IncClusterEvent_Call) Run(run func(evType string)) *MockMetrics_IncClusterEvent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockMetrics_IncClusterEvent_Call) Return() *MockMetrics_IncClusterEvent_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_IncClusterEvent_Call) RunAndReturn(run func(string)) *MockMetrics_IncClusterEvent_Call {
	_c.Call.Return(run)
	return _c
}

// IncClusterMutexLockRetries provides a mock function with given fields: group
func (_m *MockMetrics) IncClusterMutexLockRetries(group string) {
	_m.Called(group)
}

// MockMetrics_IncClusterMutexLockRetries_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncClusterMutexLockRetries'
type MockMetrics_IncClusterMutexLockRetries_Call struct {
	*mock.Call
}

// IncClusterMutexLockRetries is a helper method to define mock.On call
//   - group string
func (_e *MockMetrics_Expecter) IncClusterMutexLockRetries(group interface{}) *MockMetrics_IncClusterMutexLockRetries_Call {
	return &MockMetrics_IncClusterMutexLockRetries_Call{Call: _e.mock.On("IncClusterMutexLockRetries", group)}
}

func (_c *MockMetrics_IncClusterMutexLockRetries_Call) Run(run func(group string)) *MockMetrics_IncClusterMutexLockRetries_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockMetrics_IncClusterMutexLockRetries_Call) Return() *MockMetrics_IncClusterMutexLockRetries_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_IncClusterMutexLockRetries_Call) RunAndReturn(run func(string)) *MockMetrics_IncClusterMutexLockRetries_Call {
	_c.Call.Return(run)
	return _c
}

// IncLiveCaptionsPktPayloadChBufFull provides a mock function with given fields:
func (_m *MockMetrics) IncLiveCaptionsPktPayloadChBufFull() {
	_m.Called()
}

// MockMetrics_IncLiveCaptionsPktPayloadChBufFull_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncLiveCaptionsPktPayloadChBufFull'
type MockMetrics_IncLiveCaptionsPktPayloadChBufFull_Call struct {
	*mock.Call
}

// IncLiveCaptionsPktPayloadChBufFull is a helper method to define mock.On call
func (_e *MockMetrics_Expecter) IncLiveCaptionsPktPayloadChBufFull() *MockMetrics_IncLiveCaptionsPktPayloadChBufFull_Call {
	return &MockMetrics_IncLiveCaptionsPktPayloadChBufFull_Call{Call: _e.mock.On("IncLiveCaptionsPktPayloadChBufFull")}
}

func (_c *MockMetrics_IncLiveCaptionsPktPayloadChBufFull_Call) Run(run func()) *MockMetrics_IncLiveCaptionsPktPayloadChBufFull_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMetrics_IncLiveCaptionsPktPayloadChBufFull_Call) Return() *MockMetrics_IncLiveCaptionsPktPayloadChBufFull_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_IncLiveCaptionsPktPayloadChBufFull_Call) RunAndReturn(run func()) *MockMetrics_IncLiveCaptionsPktPayloadChBufFull_Call {
	_c.Call.Return(run)
	return _c
}

// IncLiveCaptionsTranscriberBufFull provides a mock function with given fields:
func (_m *MockMetrics) IncLiveCaptionsTranscriberBufFull() {
	_m.Called()
}

// MockMetrics_IncLiveCaptionsTranscriberBufFull_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncLiveCaptionsTranscriberBufFull'
type MockMetrics_IncLiveCaptionsTranscriberBufFull_Call struct {
	*mock.Call
}

// IncLiveCaptionsTranscriberBufFull is a helper method to define mock.On call
func (_e *MockMetrics_Expecter) IncLiveCaptionsTranscriberBufFull() *MockMetrics_IncLiveCaptionsTranscriberBufFull_Call {
	return &MockMetrics_IncLiveCaptionsTranscriberBufFull_Call{Call: _e.mock.On("IncLiveCaptionsTranscriberBufFull")}
}

func (_c *MockMetrics_IncLiveCaptionsTranscriberBufFull_Call) Run(run func()) *MockMetrics_IncLiveCaptionsTranscriberBufFull_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMetrics_IncLiveCaptionsTranscriberBufFull_Call) Return() *MockMetrics_IncLiveCaptionsTranscriberBufFull_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_IncLiveCaptionsTranscriberBufFull_Call) RunAndReturn(run func()) *MockMetrics_IncLiveCaptionsTranscriberBufFull_Call {
	_c.Call.Return(run)
	return _c
}

// IncLiveCaptionsWindowDropped provides a mock function with given fields:
func (_m *MockMetrics) IncLiveCaptionsWindowDropped() {
	_m.Called()
}

// MockMetrics_IncLiveCaptionsWindowDropped_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncLiveCaptionsWindowDropped'
type MockMetrics_IncLiveCaptionsWindowDropped_Call struct {
	*mock.Call
}

// IncLiveCaptionsWindowDropped is a helper method to define mock.On call
func (_e *MockMetrics_Expecter) IncLiveCaptionsWindowDropped() *MockMetrics_IncLiveCaptionsWindowDropped_Call {
	return &MockMetrics_IncLiveCaptionsWindowDropped_Call{Call: _e.mock.On("IncLiveCaptionsWindowDropped")}
}

func (_c *MockMetrics_IncLiveCaptionsWindowDropped_Call) Run(run func()) *MockMetrics_IncLiveCaptionsWindowDropped_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMetrics_IncLiveCaptionsWindowDropped_Call) Return() *MockMetrics_IncLiveCaptionsWindowDropped_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_IncLiveCaptionsWindowDropped_Call) RunAndReturn(run func()) *MockMetrics_IncLiveCaptionsWindowDropped_Call {
	_c.Call.Return(run)
	return _c
}

// IncStoreOp provides a mock function with given fields: op
func (_m *MockMetrics) IncStoreOp(op string) {
	_m.Called(op)
}

// MockMetrics_IncStoreOp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncStoreOp'
type MockMetrics_IncStoreOp_Call struct {
	*mock.Call
}

// IncStoreOp is a helper method to define mock.On call
//   - op string
func (_e *MockMetrics_Expecter) IncStoreOp(op interface{}) *MockMetrics_IncStoreOp_Call {
	return &MockMetrics_IncStoreOp_Call{Call: _e.mock.On("IncStoreOp", op)}
}

func (_c *MockMetrics_IncStoreOp_Call) Run(run func(op string)) *MockMetrics_IncStoreOp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockMetrics_IncStoreOp_Call) Return() *MockMetrics_IncStoreOp_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_IncStoreOp_Call) RunAndReturn(run func(string)) *MockMetrics_IncStoreOp_Call {
	_c.Call.Return(run)
	return _c
}

// IncWebSocketConn provides a mock function with given fields:
func (_m *MockMetrics) IncWebSocketConn() {
	_m.Called()
}

// MockMetrics_IncWebSocketConn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncWebSocketConn'
type MockMetrics_IncWebSocketConn_Call struct {
	*mock.Call
}

// IncWebSocketConn is a helper method to define mock.On call
func (_e *MockMetrics_Expecter) IncWebSocketConn() *MockMetrics_IncWebSocketConn_Call {
	return &MockMetrics_IncWebSocketConn_Call{Call: _e.mock.On("IncWebSocketConn")}
}

func (_c *MockMetrics_IncWebSocketConn_Call) Run(run func()) *MockMetrics_IncWebSocketConn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMetrics_IncWebSocketConn_Call) Return() *MockMetrics_IncWebSocketConn_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_IncWebSocketConn_Call) RunAndReturn(run func()) *MockMetrics_IncWebSocketConn_Call {
	_c.Call.Return(run)
	return _c
}

// IncWebSocketEvent provides a mock function with given fields: direction, evType
func (_m *MockMetrics) IncWebSocketEvent(direction string, evType string) {
	_m.Called(direction, evType)
}

// MockMetrics_IncWebSocketEvent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncWebSocketEvent'
type MockMetrics_IncWebSocketEvent_Call struct {
	*mock.Call
}

// IncWebSocketEvent is a helper method to define mock.On call
//   - direction string
//   - evType string
func (_e *MockMetrics_Expecter) IncWebSocketEvent(direction interface{}, evType interface{}) *MockMetrics_IncWebSocketEvent_Call {
	return &MockMetrics_IncWebSocketEvent_Call{Call: _e.mock.On("IncWebSocketEvent", direction, evType)}
}

func (_c *MockMetrics_IncWebSocketEvent_Call) Run(run func(direction string, evType string)) *MockMetrics_IncWebSocketEvent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockMetrics_IncWebSocketEvent_Call) Return() *MockMetrics_IncWebSocketEvent_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_IncWebSocketEvent_Call) RunAndReturn(run func(string, string)) *MockMetrics_IncWebSocketEvent_Call {
	_c.Call.Return(run)
	return _c
}

// ObserveAppHandlersTime provides a mock function with given fields: handler, elapsed
func (_m *MockMetrics) ObserveAppHandlersTime(handler string, elapsed float64) {
	_m.Called(handler, elapsed)
}

// MockMetrics_ObserveAppHandlersTime_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveAppHandlersTime'
type MockMetrics_ObserveAppHandlersTime_Call struct {
	*mock.Call
}

// ObserveAppHandlersTime is a helper method to define mock.On call
//   - handler string
//   - elapsed float64
func (_e *MockMetrics_Expecter) ObserveAppHandlersTime(handler interface{}, elapsed interface{}) *MockMetrics_ObserveAppHandlersTime_Call {
	return &MockMetrics_ObserveAppHandlersTime_Call{Call: _e.mock.On("ObserveAppHandlersTime", handler, elapsed)}
}

func (_c *MockMetrics_ObserveAppHandlersTime_Call) Run(run func(handler string, elapsed float64)) *MockMetrics_ObserveAppHandlersTime_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(float64))
	})
	return _c
}

func (_c *MockMetrics_ObserveAppHandlersTime_Call) Return() *MockMetrics_ObserveAppHandlersTime_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_ObserveAppHandlersTime_Call) RunAndReturn(run func(string, float64)) *MockMetrics_ObserveAppHandlersTime_Call {
	_c.Call.Return(run)
	return _c
}

// ObserveClusterMutexGrabTime provides a mock function with given fields: group, elapsed
func (_m *MockMetrics) ObserveClusterMutexGrabTime(group string, elapsed float64) {
	_m.Called(group, elapsed)
}

// MockMetrics_ObserveClusterMutexGrabTime_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveClusterMutexGrabTime'
type MockMetrics_ObserveClusterMutexGrabTime_Call struct {
	*mock.Call
}

// ObserveClusterMutexGrabTime is a helper method to define mock.On call
//   - group string
//   - elapsed float64
func (_e *MockMetrics_Expecter) ObserveClusterMutexGrabTime(group interface{}, elapsed interface{}) *MockMetrics_ObserveClusterMutexGrabTime_Call {
	return &MockMetrics_ObserveClusterMutexGrabTime_Call{Call: _e.mock.On("ObserveClusterMutexGrabTime", group, elapsed)}
}

func (_c *MockMetrics_ObserveClusterMutexGrabTime_Call) Run(run func(group string, elapsed float64)) *MockMetrics_ObserveClusterMutexGrabTime_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(float64))
	})
	return _c
}

func (_c *MockMetrics_ObserveClusterMutexGrabTime_Call) Return() *MockMetrics_ObserveClusterMutexGrabTime_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_ObserveClusterMutexGrabTime_Call) RunAndReturn(run func(string, float64)) *MockMetrics_ObserveClusterMutexGrabTime_Call {
	_c.Call.Return(run)
	return _c
}

// ObserveClusterMutexLockedTime provides a mock function with given fields: group, elapsed
func (_m *MockMetrics) ObserveClusterMutexLockedTime(group string, elapsed float64) {
	_m.Called(group, elapsed)
}

// MockMetrics_ObserveClusterMutexLockedTime_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveClusterMutexLockedTime'
type MockMetrics_ObserveClusterMutexLockedTime_Call struct {
	*mock.Call
}

// ObserveClusterMutexLockedTime is a helper method to define mock.On call
//   - group string
//   - elapsed float64
func (_e *MockMetrics_Expecter) ObserveClusterMutexLockedTime(group interface{}, elapsed interface{}) *MockMetrics_ObserveClusterMutexLockedTime_Call {
	return &MockMetrics_ObserveClusterMutexLockedTime_Call{Call: _e.mock.On("ObserveClusterMutexLockedTime", group, elapsed)}
}

func (_c *MockMetrics_ObserveClusterMutexLockedTime_Call) Run(run func(group string, elapsed float64)) *MockMetrics_ObserveClusterMutexLockedTime_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(float64))
	})
	return _c
}

func (_c *MockMetrics_ObserveClusterMutexLockedTime_Call) Return() *MockMetrics_ObserveClusterMutexLockedTime_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_ObserveClusterMutexLockedTime_Call) RunAndReturn(run func(string, float64)) *MockMetrics_ObserveClusterMutexLockedTime_Call {
	_c.Call.Return(run)
	return _c
}

// ObserveLiveCaptionsAudioLen provides a mock function with given fields: elapsed
func (_m *MockMetrics) ObserveLiveCaptionsAudioLen(elapsed float64) {
	_m.Called(elapsed)
}

// MockMetrics_ObserveLiveCaptionsAudioLen_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveLiveCaptionsAudioLen'
type MockMetrics_ObserveLiveCaptionsAudioLen_Call struct {
	*mock.Call
}

// ObserveLiveCaptionsAudioLen is a helper method to define mock.On call
//   - elapsed float64
func (_e *MockMetrics_Expecter) ObserveLiveCaptionsAudioLen(elapsed interface{}) *MockMetrics_ObserveLiveCaptionsAudioLen_Call {
	return &MockMetrics_ObserveLiveCaptionsAudioLen_Call{Call: _e.mock.On("ObserveLiveCaptionsAudioLen", elapsed)}
}

func (_c *MockMetrics_ObserveLiveCaptionsAudioLen_Call) Run(run func(elapsed float64)) *MockMetrics_ObserveLiveCaptionsAudioLen_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockMetrics_ObserveLiveCaptionsAudioLen_Call) Return() *MockMetrics_ObserveLiveCaptionsAudioLen_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_ObserveLiveCaptionsAudioLen_Call) RunAndReturn(run func(float64)) *MockMetrics_ObserveLiveCaptionsAudioLen_Call {
	_c.Call.Return(run)
	return _c
}

// ObserveStoreMethodsTime provides a mock function with given fields: method, elapsed
func (_m *MockMetrics) ObserveStoreMethodsTime(method string, elapsed float64) {
	_m.Called(method, elapsed)
}

// MockMetrics_ObserveStoreMethodsTime_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveStoreMethodsTime'
type MockMetrics_ObserveStoreMethodsTime_Call struct {
	*mock.Call
}

// ObserveStoreMethodsTime is a helper method to define mock.On call
//   - method string
//   - elapsed float64
func (_e *MockMetrics_Expecter) ObserveStoreMethodsTime(method interface{}, elapsed interface{}) *MockMetrics_ObserveStoreMethodsTime_Call {
	return &MockMetrics_ObserveStoreMethodsTime_Call{Call: _e.mock.On("ObserveStoreMethodsTime", method, elapsed)}
}

func (_c *MockMetrics_ObserveStoreMethodsTime_Call) Run(run func(method string, elapsed float64)) *MockMetrics_ObserveStoreMethodsTime_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(float64))
	})
	return _c
}

func (_c *MockMetrics_ObserveStoreMethodsTime_Call) Return() *MockMetrics_ObserveStoreMethodsTime_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_ObserveStoreMethodsTime_Call) RunAndReturn(run func(string, float64)) *MockMetrics_ObserveStoreMethodsTime_Call {
	_c.Call.Return(run)
	return _c
}

// RTCMetrics provides a mock function with given fields:
func (_m *MockMetrics) RTCMetrics() rtc.Metrics {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RTCMetrics")
	}

	var r0 rtc.Metrics
	if rf, ok := ret.Get(0).(func() rtc.Metrics); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(rtc.Metrics)
		}
	}

	return r0
}

// MockMetrics_RTCMetrics_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RTCMetrics'
type MockMetrics_RTCMetrics_Call struct {
	*mock.Call
}

// RTCMetrics is a helper method to define mock.On call
func (_e *MockMetrics_Expecter) RTCMetrics() *MockMetrics_RTCMetrics_Call {
	return &MockMetrics_RTCMetrics_Call{Call: _e.mock.On("RTCMetrics")}
}

func (_c *MockMetrics_RTCMetrics_Call) Run(run func()) *MockMetrics_RTCMetrics_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMetrics_RTCMetrics_Call) Return(_a0 rtc.Metrics) *MockMetrics_RTCMetrics_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMetrics_RTCMetrics_Call) RunAndReturn(run func() rtc.Metrics) *MockMetrics_RTCMetrics_Call {
	_c.Call.Return(run)
	return _c
}

// RegisterDBMetrics provides a mock function with given fields: db, name
func (_m *MockMetrics) RegisterDBMetrics(db *sql.DB, name string) {
	_m.Called(db, name)
}

// MockMetrics_RegisterDBMetrics_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterDBMetrics'
type MockMetrics_RegisterDBMetrics_Call struct {
	*mock.Call
}

// RegisterDBMetrics is a helper method to define mock.On call
//   - db *sql.DB
//   - name string
func (_e *MockMetrics_Expecter) RegisterDBMetrics(db interface{}, name interface{}) *MockMetrics_RegisterDBMetrics_Call {
	return &MockMetrics_RegisterDBMetrics_Call{Call: _e.mock.On("RegisterDBMetrics", db, name)}
}

func (_c *MockMetrics_RegisterDBMetrics_Call) Run(run func(db *sql.DB, name string)) *MockMetrics_RegisterDBMetrics_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*sql.DB), args[1].(string))
	})
	return _c
}

func (_c *MockMetrics_RegisterDBMetrics_Call) Return() *MockMetrics_RegisterDBMetrics_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetrics_RegisterDBMetrics_Call) RunAndReturn(run func(*sql.DB, string)) *MockMetrics_RegisterDBMetrics_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockMetrics creates a new instance of MockMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMetrics {
	mock := &MockMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
